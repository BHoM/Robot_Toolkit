<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RobotToolkit</name>
    </assembly>
    <members>
        <member name="T:RobotToolkit.FileIO">
            <summary>
            Input/output class to control how Robot application is accessed
            </summary>
        </member>
        <member name="P:RobotToolkit.FileIO.robotLink">
            <summary>Robotlink object</summary>
        </member>
        <member name="P:RobotToolkit.FileIO.HasLicense">
            <summary>True if a license is available</summary>
        </member>
        <member name="F:RobotToolkit.FileIO.robapp">
            <summary>Robot application object</summary>
        </member>
        <member name="M:RobotToolkit.FileIO.#ctor">
            <summary>
            Constructs an empty FileIO object
            </summary>
        </member>
        <member name="M:RobotToolkit.FileIO.#ctor(System.String)">
            <summary>
            Constructs a FileIO object using a path/filename as a string
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:RobotToolkit.FileIO.Open(System.String)">
            <summary>
            Opens a Robot model using a path/filename as a string
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:RobotToolkit.FileIO.New">
            <summary>
            Opens a blank Robot project with 3D frame type UI
            </summary>
        </member>
        <member name="M:RobotToolkit.FileIO.Save">
            <summary>
            Saves a Robot model
            </summary>
        </member>
        <member name="M:RobotToolkit.FileIO.SaveAs(System.String)">
            <summary>
            Saves a Robot model to a given file/folder path name
            </summary>
            <param name="path"></param>
        </member>
        <member name="T:RobotToolkit.RobotLink">
            <summary>
            Robot Link object
            </summary>
        </member>
        <member name="P:RobotToolkit.RobotLink.Link">
            <summary>Robot COM link</summary>
        </member>
        <member name="M:RobotToolkit.RobotLink.#ctor">
            <summary>Contructs and empty RobotLink</summary>
        </member>
        <member name="M:RobotToolkit.RobotLink.Dispose">
            <summary>
            Dispose the link object
            </summary>
        </member>
        <member name="M:RobotToolkit.RobotLink.Dispose(System.Boolean)">
            <summary>
            Dispose the link
            </summary>
            <param name="disposing">True if it is safe to free managed objects.
            True when called from Dispose(), false when called from Finalize()</param>
        </member>
        <member name="M:RobotToolkit.RobotLink.Finalize">
            <summary>
            RobotLink
            </summary>
        </member>
        <member name="T:RobotToolkit.FiniteElement">
            <summary>
            Finite elements class for 2D planar shell finite element objects
            </summary>
        </member>
        <member name="M:RobotToolkit.FiniteElement.GetFEMeshQuery(BHoM.Global.Project,System.Int32[]@,System.Double[][]@,System.Collections.Generic.Dictionary{System.Int32,System.Int32[]}@,System.Collections.Generic.Dictionary{System.Int32,BHoM.Structural.Node}@,System.String)">
            <summary>
            Gets the FE meshes from a Robot model using the fast query method
            </summary>
            <param name="panel_ids"></param>
            <param name="coords"></param>
            <param name="vertex_indices"></param>
            <param name="str_nodes"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.Labels.Support">
            <summary>
            Import/export/operate on Robot support labels
            </summary>
        </member>
        <member name="M:RobotToolkit.Labels.Support.CreateSupportLabel(RobotOM.RobotApplication,BHoM.Structural.Constraint)">
            <summary>
            Create a support label
            </summary>
            <param name="robot"></param>
            <param name="restraint"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Labels.Support.CreateConstraintFromRobotSupport(RobotOM.RobotApplication,RobotOM.IRobotLabel)">
            <summary>
            Generate a BHoM constraint object from a Robot support label
            </summary>
            <param name="robot"></param>
            <param name="support"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.Label">
            <summary>
            Robot label object - to manage all label objects to/from Robot
            </summary>
        </member>
        <member name="M:RobotToolkit.Label.GetAllSectionPropertyNames(RobotOM.RobotApplication)">
            <summary>
            Get all section property label names from a Robot model
            </summary>
            <param name="robot"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.GetAllSupportNames(RobotOM.RobotApplication)">
            <summary>
            Get all support label names from a Robot model
            </summary>
            <param name="robot"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.GetAllReleaseNames(RobotOM.RobotApplication)">
            <summary>
            Get all release label names from a Robot model
            </summary>
            <param name="robot"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.GetAllMaterialNames(RobotOM.RobotApplication)">
            <summary>
            Get all material label names from a Robot model
            </summary>
            <param name="robot"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.GetAllBarMemberTypeNames(RobotOM.RobotApplication)">
            <summary>
            Get all member type names from a Robot model
            </summary>
            <param name="robot"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.GetAllSectionProperties(RobotOM.RobotApplication,System.Int32[]@,System.String[]@,System.String[]@,RobotOM.IRobotBarSectionType[]@,RobotOM.IRobotBarSectionShapeType[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.String[][]@)">
            <summary>
            Get all section properties from a Robot model
            </summary>
            <param name="robot"></param>
            <param name="uniqueIds"></param>
            <param name="names"></param>
            <param name="materialNames"></param>
            <param name="types"></param>
            <param name="shapeTypes"></param>
            <param name="D"></param>
            <param name="BF"></param>
            <param name="BF2"></param>
            <param name="tw"></param>
            <param name="tf"></param>
            <param name="tf2"></param>
            <param name="Ax"></param>
            <param name="Ixx"></param>
            <param name="Iyy"></param>
            <param name="Izz"></param>
            <param name="mass"></param>
            <param name="aliases"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.GetAllMaterials(RobotOM.RobotApplication,System.Int32[]@,System.String[]@,RobotOM.IRobotMaterialType[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@,System.Double[]@)">
            <summary>
            Get all material properties from a Robot model
            </summary>
            <param name="robot"></param>
            <param name="ids"></param>
            <param name="names"></param>
            <param name="types"></param>
            <param name="E"></param>
            <param name="nu"></param>
            <param name="G"></param>
            <param name="density"></param>
            <param name="alpha"></param>
            <param name="dampingRatio"></param>
            <param name="fy"></param>
            <param name="fu"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.CreateSectionPropertyFromDatabase(RobotOM.RobotApplication,System.String,System.String,System.String)">
            <summary>
            Create a Robot section property label from a section database
            </summary>
            <param name="robot"></param>
            <param name="name"></param>
            <param name="mat"></param>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.CreateSectionPropertyRHS(RobotOM.RobotApplication,System.String,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Create an RHS section property label 
            </summary>
            <param name="robot"></param>
            <param name="name"></param>
            <param name="mat"></param>
            <param name="D"></param>
            <param name="B"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.CreateSectionPropertyCHS(RobotOM.RobotApplication,System.String,System.String,System.Double,System.Double)">
            <summary>
            Create a CHS section property label
            </summary>
            <param name="robot"></param>
            <param name="name"></param>
            <param name="mat"></param>
            <param name="D"></param>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.CreateSectionPropertyT(RobotOM.RobotApplication,System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create a tee section property label
            </summary>
            <param name="robot"></param>
            <param name="name"></param>
            <param name="mat"></param>
            <param name="D"></param>
            <param name="B"></param>
            <param name="tw"></param>
            <param name="tf"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.CreateSectionPropertyBox(RobotOM.RobotApplication,System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create a box section property label
            </summary>
            <param name="robot"></param>
            <param name="name"></param>
            <param name="mat"></param>
            <param name="D"></param>
            <param name="B"></param>
            <param name="tw"></param>
            <param name="tf"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.CreateSectionPropertyIBiSymmetric(RobotOM.RobotApplication,System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create an I section property label with bi-symmetry
            </summary>
            <param name="robot"></param>
            <param name="name"></param>
            <param name="mat"></param>
            <param name="D"></param>
            <param name="B"></param>
            <param name="tw"></param>
            <param name="tf"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.CreateReleaseLabel(RobotOM.RobotApplication,BHoM.Structural.BarRelease,BHoM.Structural.BarRelease)">
            <summary>
            Create a release label
            </summary>
            <param name="robot"></param>
            <param name="startRelease"></param>
            <param name="endRelease"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Label.CreateMaterialLabel(RobotOM.RobotApplication,System.String,RobotOM.IRobotMaterialType,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create a material label
            </summary>
            <param name="robot"></param>
            <param name="name"></param>
            <param name="materialType"></param>
            <param name="E"></param>
            <param name="nu"></param>
            <param name="G"></param>
            <param name="density"></param>
            <param name="alpha"></param>
            <param name="dampingRatio"></param>
            <param name="fy"></param>
            <param name="fu"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.App">
            <summary>
            Application class for Robot application controls
            </summary>
        </member>
        <member name="M:RobotToolkit.App.RunCalculations(System.String)">
            <summary>
            Runs the Robot calculations engine
            </summary>
            <param name="FilePath"></param>
        </member>
        <member name="M:RobotToolkit.App.StopCalculations(System.String)">
            <summary>
            Stops the Robot calculation engine
            </summary>
            <param name="FilePath"></param>
        </member>
        <member name="T:RobotToolkit.Loadcase">
            <summary>
            Loadcase objects
            </summary>
        </member>
        <member name="M:RobotToolkit.Loadcase.CreateLoadcases(BHoM.Structural.Loads.Loadcase[],System.String)">
            <summary>
            Create Robot loadcases
            </summary>
            <param name="loadcases"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.NodalLoad">
            <summary>
            Nodal load objects
            </summary>
        </member>
        <member name="M:RobotToolkit.NodalLoad.CreateNodalLoadDisplacement(BHoM.Structural.Loads.NodalLoad[],System.String)">
            <summary>
            Create a nodal load displacement
            </summary>
            <param name="nodalLoads"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.Results.Bars.BarForces">
            <summary>
            
            </summary>
        </member>
        <member name="M:RobotToolkit.Results.Bars.BarForces.GetBarForcesQuery(BHoM.Global.Project,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="selection"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.SectionProperties.SectionProperty">
            <summary>
            Section property class, the parent abstract class for all structural 
            sections (RC, steel, PT beams, columns, bracing). Properties defined in this 
            parent class are those that would populate a multi category section database only
            </summary>
        </member>
        <member name="M:RobotToolkit.SectionProperties.SectionProperty.Get(BHoM.Global.Project,RobotOM.IRobotLabel)">
            <summary>Set the BHoM section shape type</summary>
        </member>
        <member name="T:RobotToolkit.Utilities.Utils">
            <summary>
            
            </summary>
        </member>
        <member name="M:RobotToolkit.Utilities.Utils.GetNumbersFromText(System.String)">
            <summary>
            
            </summary>
            <param name="selection"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.WindCFD">
            <summary>
            Wind CFD controller object
            </summary>
        </member>
        <member name="M:RobotToolkit.WindCFD.Generate(RobotToolkit.WindDirection,RobotToolkit.WindParams,System.String)">
            <summary>
            Generate wind CFD analysis
            </summary>
            <param name="windDir"></param>
            <param name="windParams"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.WindDirection">
            <summary>
            Wind directions
            </summary>
        </member>
        <member name="P:RobotToolkit.WindDirection.x_positive">
            <summary>Wind in positive X direction</summary>
        </member>
        <member name="P:RobotToolkit.WindDirection.y_positive">
            <summary>Wind in positive Y direction</summary>
        </member>
        <member name="P:RobotToolkit.WindDirection.x_negative">
            <summary>Wind in negative X direction</summary>
        </member>
        <member name="P:RobotToolkit.WindDirection.y_negative">
            <summary>Wind in negative Y direction</summary>
        </member>
        <member name="P:RobotToolkit.WindDirection.quadrants">
            <summary>Wind in quadrants direction</summary>
        </member>
        <member name="M:RobotToolkit.WindDirection.#ctor">
            <summary>
            Construct a wind directions object
            </summary>
        </member>
        <member name="M:RobotToolkit.WindDirection.SetDirection(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set wind directions
            </summary>
            <param name="x_positive"></param>
            <param name="y_positive"></param>
            <param name="x_negative"></param>
            <param name="y_negative"></param>
            <param name="quadrants"></param>
        </member>
        <member name="T:RobotToolkit.WindParams">
            <summary>
            Wind parameters for CFD analysis
            </summary>
        </member>
        <member name="P:RobotToolkit.WindParams.deviationPercent">
            <summary>Deviation of the solution</summary>
        </member>
        <member name="P:RobotToolkit.WindParams.terrainLevel">
            <summary>Terrain level for wind modelling</summary>
        </member>
        <member name="P:RobotToolkit.WindParams.velocity">
            <summary>Wind velocity</summary>
        </member>
        <member name="P:RobotToolkit.WindParams.openingsClosed">
            <summary>Panel openings assumed closed or open</summary>
        </member>
        <member name="M:RobotToolkit.WindParams.#ctor">
            <summary>
            Wind parameters constructor
            </summary>
        </member>
        <member name="M:RobotToolkit.WindParams.SetParameters(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Set wind parameters
            </summary>
            <param name="deviationPercent"></param>
            <param name="terrainLevel"></param>
            <param name="velocity"></param>
            <param name="openingsClosed"></param>
        </member>
        <member name="T:RobotToolkit.Load">
            <summary>
            Load objects and methods
            </summary>
        </member>
        <member name="M:RobotToolkit.Load.CreatePanelLoad(RobotOM.RobotApplication,System.Int32,RobotOM.IRobotLoadRecordType,System.String,BHoM.Structural.AxisDirection,System.Boolean,System.Boolean,System.Double)">
            <summary>
            Create a panel load
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="type"></param>
            <param name="selString"></param>
            <param name="axis"></param>
            <param name="localAxis"></param>
            <param name="projected"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.GetLoads(BHoM.Structural.Loads.Loadcase,System.Collections.Generic.List{BHoM.Structural.Loads.AreaUniformalyDistributedLoad}@)">
            <summary>
            Get Load Objects for uniform area loads
            </summary>
            <param name="robapp"></param>
            <param name="loadcase"></param>
            <param name="loads"></param>
        </member>
        <member name="M:RobotToolkit.Load.CreateThermalBeamLoad(RobotOM.RobotApplication,System.Int32,System.String,System.Double)">
            <summary>
            Create a thermal load on a beam
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateGravityLoad(RobotOM.RobotApplication,System.Int32,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Create a gravity load
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="valX"></param>
            <param name="valY"></param>
            <param name="valZ"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateBeamDistributedMomentLoad(RobotOM.RobotApplication,System.Int32,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Create a distributed moment on a beam
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="mx"></param>
            <param name="my"></param>
            <param name="mz"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateBeamDistributedMomentLoad(RobotOM.RobotApplication,System.Int32,System.String,System.Double,BHoM.Structural.AxisDirection)">
            <summary>
            Create a beam distributed moment load
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="value"></param>
            <param name="AxisDirection"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateBeamUDL(RobotOM.RobotApplication,System.Int32,System.String,System.Double,System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Create a uniformly distributed load on a beam
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="px"></param>
            <param name="py"></param>
            <param name="pz"></param>
            <param name="projected"></param>
            <param name="local"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateBeamUDL(RobotOM.RobotApplication,System.Int32,System.String,System.Double,BHoM.Structural.AxisDirection,System.Boolean,System.Boolean)">
            <summary>
            Create a uniformly distributed load on a beam
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="value"></param>
            <param name="AxisDirection"></param>
            <param name="projected"></param>
            <param name="local"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateBeamPatchLoad(RobotOM.RobotApplication,System.Int32,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a patch load on a beam
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="px1"></param>
            <param name="py1"></param>
            <param name="pz1"></param>
            <param name="pos1"></param>
            <param name="px2"></param>
            <param name="py2"></param>
            <param name="pz2"></param>
            <param name="pos2"></param>
            <param name="normalised"></param>
            <param name="projected"></param>
            <param name="local"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateBeamPatchLoad(RobotOM.RobotApplication,System.Int32,System.String,BHoM.Structural.AxisDirection,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a patch load on a beam
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="AxisDirection"></param>
            <param name="value1"></param>
            <param name="pos1"></param>
            <param name="value2"></param>
            <param name="pos2"></param>
            <param name="normalised"></param>
            <param name="projected"></param>
            <param name="local"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateBeamPointLoad(RobotOM.RobotApplication,System.Int32,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a point load on a beam
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="pos"></param>
            <param name="fx"></param>
            <param name="fy"></param>
            <param name="fz"></param>
            <param name="mx"></param>
            <param name="my"></param>
            <param name="mz"></param>
            <param name="normalised"></param>
            <param name="local"></param>
            <param name="generateCalcNode"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateBeamPointLoad(RobotOM.RobotApplication,System.Int32,System.String,System.Double,System.Double,BHoM.Structural.AxisDirection,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create a point load on a beam
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="pos"></param>
            <param name="value"></param>
            <param name="AxisDirection"></param>
            <param name="normalised"></param>
            <param name="local"></param>
            <param name="generateCalcNode"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateNodalLoad(RobotOM.RobotApplication,System.Int32,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Create a nodal load
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="fx"></param>
            <param name="fy"></param>
            <param name="fz"></param>
            <param name="mx"></param>
            <param name="my"></param>
            <param name="mz"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Load.CreateNodalLoad(RobotOM.RobotApplication,System.Int32,System.String,BHoM.Structural.AxisDirection,System.Double)">
            <summary>
            Create a nodal load
            </summary>
            <param name="robot"></param>
            <param name="loadCaseId"></param>
            <param name="selString"></param>
            <param name="axis"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.RobotAccessType">
            <summary>
            Robot access types
            </summary>
        </member>
        <member name="F:RobotToolkit.RobotAccessType.Live">
            <summary>Live link to Robot</summary>
        </member>
        <member name="F:RobotToolkit.RobotAccessType.FromFile">
            <summary>Use a Robot file</summary>
        </member>
        <member name="T:RobotToolkit.General">
            <summary>
            General tools
            </summary>
        </member>
        <member name="M:RobotToolkit.General.RefreshView(System.String)">
            <summary>
            Refreshes the Robot view
            </summary>
            <param name="FilePath"></param>
        </member>
        <member name="M:RobotToolkit.General.ClearStructure(System.String)">
            <summary>
            Deletes all elements from a Robot structure
            </summary>
            <param name="FilePath"></param>
        </member>
        <member name="M:RobotToolkit.General.GetFreeNumbers(System.Int32@,System.Int32@,System.Int32@,System.String)">
            <summary>
            Get free node, bar, object numbers from a Robot model (the next highest number)
            </summary>
            <param name="freeNodeNum"></param>
            <param name="freeBarNum"></param>
            <param name="freeObjNum"></param>
            <param name="FilePath"></param>
        </member>
        <member name="T:RobotToolkit.Panel">
            <summary>
            Robot panel objects
            </summary>
        </member>
        <member name="M:RobotToolkit.Panel.GetFreePanelNumber(System.Int32@,System.String)">
            <summary>
            Get the first free panel number (by free object number)
            </summary>
            <param name="freePanelNum"></param>
            <param name="FilePath"></param>
        </member>
        <member name="M:RobotToolkit.Panel.GetPanels(System.Int32[]@,System.Double[0:,0:][]@,System.String)">
            <summary>
            Get panel objects from Robot using the COM interface
            </summary>
            <param name="ids"></param>
            <param name="coords"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Panel.GetContours(System.Int32[]@,System.Double[0:,0:][]@,System.String)">
            <summary>
            Get contour geometry from Robot using the COM interface
            </summary>
            <param name="ids"></param>
            <param name="coords"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Panel.CreatePanels(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double[0:,0:]},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Create Robot panels
            </summary>
            <param name="PanelNumbers"></param>
            <param name="EdgePointCoords"></param>
            <param name="thicknessNames"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Panel.CreateOpenings(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double[0:,0:]},System.String)">
            <summary>
            Create Robot openings in panels
            </summary>
            <param name="PanelNumbers"></param>
            <param name="EdgePointCoords"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Panel.UpdateGeometry(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Double[0:,0:]},System.String)">
            <summary>
            Update panel geometry by redefinition of edge point coordinates
            </summary>
            <param name="PanelNumbers"></param>
            <param name="EdgePointCoords"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Panel.DeletePanels(System.String,System.String)">
            <summary>
            Delete panels in a Robot model
            </summary>
            <param name="selString"></param>
            <param name="FilePath"></param>
        </member>
        <member name="T:RobotToolkit.Node">
            <summary>
            Node objects
            </summary>
        </member>
        <member name="M:RobotToolkit.Node.GetNodesQuery(BHoM.Global.Project,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="selection"></param>
            <param name="filePath"></param>
        </member>
        <member name="M:RobotToolkit.Node.GetNodes(BHoM.Global.Project,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="project"></param>
            <param name="nodes"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Node.CreateNodesByCache(BHoM.Structural.Node[],System.String)">
            <summary>
            Create nodes using the fast cache method
            </summary>
            <param name="str_nodes"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Node.DeleteNodes(System.String,System.String)">
            <summary>
            Delete nodes by selection. Selection is in Robot string format. 
            </summary>
            <param name="selString"></param>
            <param name="FilePath"></param>
        </member>
        <member name="M:RobotToolkit.Node.DeleteIsolatedNodes(System.String)">
            <summary>
            Delete isolated nodes. 
            </summary>
            <param name="FilePath"></param>
        </member>
        <member name="M:RobotToolkit.Node.SetRestraints(System.Collections.Generic.List{BHoM.Structural.Node},System.String)">
            <summary>
            Set nodal restraints
            </summary>
            <param name="str_nodes"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Node.SetRigidLinks(System.Int32,System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Set rigid links by master and slave nodes
            </summary>
            <param name="masterNodeNumber"></param>
            <param name="slaveNodeNumbers"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="T:RobotToolkit.Bar">
            <summary>
            Robot bar class, for all bar objects and operations
            </summary>
        </member>
        <member name="M:RobotToolkit.Bar.GetBarsQuery(BHoM.Global.Project,System.String,System.String)">
            <summary>
            Gets Robot bars using the faster 'query' method. This does not return all Robot bar data
            as the only information returned is in double format. To get all bar data use 'GetBars' method.
            </summary>
            <param name="project"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Bar.GetBars(BHoM.Global.Project,System.String,System.String)">
            <summary>
            Get bars method, gets bars from a Robot model and all associated data. Much slower than
            the get bars query as it uses the COM interface. 
            </summary>
            <param name="project"></param>
            <param name="barNumbers"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Bar.CreateBarsByCache(BHoM.Structural.Bar[])">
            <summary>
            Creates bars using the fast cache method. 
            </summary>
            <param name="str_bars"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Bar.CreateBars(BHoM.Structural.Bar[],System.String)">
            <summary>
            Creates bars using the slower COM interface. More control over the bar and node 
            numbering is possible using this method as bars are created one by one.
            </summary>
            <param name="str_bars"></param>
            <param name="FilePath"></param>
            <returns></returns>
        </member>
        <member name="M:RobotToolkit.Bar.DeleteBars(System.String,System.String)">
            <summary>
            Deletes bars from a Robot model using a selection string. The selection string is similar
            in format to a Robot object selection string (can be a list of numbers as a string, or include 'to' words).
            </summary>
            <param name="selString"></param>
            <param name="FilePath"></param>
        </member>
    </members>
</doc>
